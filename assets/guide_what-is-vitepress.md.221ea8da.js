import{_ as e,o as r,c as t,N as a}from"./chunks/framework.212bf628.js";const f=JSON.parse('{"title":"VitePress是啥？","description":"","frontmatter":{},"headers":[],"relativePath":"guide/what-is-vitepress.md","lastUpdated":1679206371000}'),s={name:"guide/what-is-vitepress.md"},i=a('<h1 id="vitepress是啥" tabindex="-1">VitePress是啥？ <a class="header-anchor" href="#vitepress是啥" aria-label="Permalink to &quot;VitePress是啥？&quot;">​</a></h1><p>VitePress 是一个专为创建出构建速度快、以内容为核心的网站所设计的<a href="https://en.wikipedia.org/wiki/Static_site_generator" target="_blank" rel="noreferrer">静态网站生成器</a> (SSG)。 简单来说就是， VitePress 将你的文件资源放在<a href="https://en.wikipedia.org/wiki/Markdown" target="_blank" rel="noreferrer">Markdown</a>中，并为它添加一个主题，然后自动打包生成为静态HTML页面， 这样你就能轻松的将其部署在任何地方。</p><div class="tip custom-block" style="padding-top:8px;"><p>仅仅想尝试一下？ 可以点击<a href="./getting-started">快速开始</a>。</p></div><h2 id="哪里能用到它" tabindex="-1">哪里能用到它？ <a class="header-anchor" href="#哪里能用到它" aria-label="Permalink to &quot;哪里能用到它？&quot;">​</a></h2><ul><li><p><strong>文档</strong></p><p>VitePress为技术文档，尤其是那些需要嵌入交互演示的demo设置了一个默认的主题。当前你阅读的这个页面就是vitePress所默认设置的主题，还有<a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a>，<a href="https://pinia.vuejs.org/" target="_blank" rel="noreferrer">Pinia</a>，<a href="https://vueuse.org/" target="_blank" rel="noreferrer">VueUse</a>，<a href="https://mermaid.js.org/" target="_blank" rel="noreferrer">Mermaid</a>，<a href="https://doc.wikimedia.org/codex/latest/" target="_blank" rel="noreferrer">Wikimedia Codex</a>等这些文档都是如此。</p><p>还有<a href="https://vuejs.org/" target="_blank" rel="noreferrer">Vue.js官方文档</a>也是基于VitePress，只是它使用了自定义主题，并且能在多种语言之间切换。</p></li><li><p><strong>博客，档案和营销网站</strong></p><p>VitePress 支持<a href="/vitepress-study/guide/custom-theme">完全自定义主题</a>，前提是你具有标准的vite+vue应用程序开发经验。选择vite来构建，能够使你从vite丰富的生态系统中选出想要的插件并直接拿来使用。 另外， VitePress提供了非常灵活的api去<a href="/vitepress-study/guide/data-loading">加载数据</a>（本地或远程）以及<a href="/vitepress-study/guide/routing#dynamic-routes">动态生成路由</a>。只要在构建时可以确定数据内容，你就可以使用它来构建几乎任何东西。</p><p>这个<a href="https://blog.vuejs.org/" target="_blank" rel="noreferrer">Vue.js官方博客</a> 就是一个基于本地内容生成索引页面的简单博客。</p></li></ul><h2 id="开发体验" tabindex="-1">开发体验 <a class="header-anchor" href="#开发体验" aria-label="Permalink to &quot;开发体验&quot;">​</a></h2><p>VitePress力求在处理Markdown内容时提供一个非常良好的开发体验。</p><ul><li><p><strong><a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite功能:</a></strong> 服务启动快，编辑后立即更新(&lt;100ms)，无需刷新页面。</p></li><li><p><strong><a href="/vitepress-study/guide/markdown">内置Markdown拓展:</a></strong> 格式化，表格，高亮语法显示...任何你能想到的都有。 特别是，VitePress提供了许多处理代码块的高级功能，使其成为高技术文档的理想选择。</p></li><li><p><strong><a href="/vitepress-study/guide/using-vue">Vue 加强 Markdown</a>:</strong> 任何Markdown页面都是vue<a href="https://vuejs.org/guide/scaling-up/sfc.html" target="_blank" rel="noreferrer">单页面组件</a>，这得益于Vue的模板语法与HTML100%兼容。 你也能在静态内容中使用模板功能或者导入vue模块来嵌入交互演示。</p></li></ul><h2 id="性能" tabindex="-1">性能 <a class="header-anchor" href="#性能" aria-label="Permalink to &quot;性能&quot;">​</a></h2><p>与大多数传统的SSG不同的是，由VitePress生成的网站实际上是一个<a href="https://en.wikipedia.org/wiki/Single-page_application" target="_blank" rel="noreferrer">单页面应用程序</a> (SPA).</p><ul><li><p><strong>启动速度快</strong></p><p>对任何页面的首次访问都将提供静态的、预渲染的HTML，以获得极快的加载速度和最佳的SEO。然后，这个页面再去加载js包，将该页面转变为Vue SPA（转换）。 这个转化过程是极速的；在 <a href="https://pagespeed.web.dev/report?url=https%3A%2F%2Fvitepress.vuejs.org%2F" target="_blank" rel="noreferrer">页面渲染速度分析网站</a>中， 普通的VitePress站点即使在网络较慢的低端移动设备上也能获得近乎完美的性能分数。</p></li><li><p><strong>快速加载后再导航</strong></p><p>更重要的是，在初始加载完后，SPA单页面模式能给用户带来更好的体验，因为站点内的后续导航将不会导致整个页面被重新加载。并且，传入页面的内容将被动态获取和更新。 VitePress也能自动的预获取处于页面视口中的链接块。在大多数情况下，先加载再导航会给人感觉很流畅。</p></li><li><p><strong>完美交互</strong></p><p>为了能动态的将Vue部分完美嵌入到静态Markdown中, 每个Markdown页面都被作为Vue组件处理并编译成JavaScript。 这个听起来是效率低下的，但Vue编译器是能够完美的分理处静态和动态部分，最小化处理嵌入开销和有效负载。对于初始页面加载，静态部分将自动从JavaScript有效负载中删除，且不会有任何嵌入开销。</p></li></ul><h2 id="vuepress到底是什么样的" tabindex="-1">VuePress到底是什么样的？ <a class="header-anchor" href="#vuepress到底是什么样的" aria-label="Permalink to &quot;VuePress到底是什么样的？&quot;">​</a></h2><p>VitePress是VuePress理论上的继承者。原始的VuePress是基于Vue 2和webpack。 在Vue3和Vite的加持下，VitePress能提供更显著的开发体验，更好的生产性能，更精致的默认主题和更灵活的定制API。</p><p>VitePress和VuePress之间的API差异主要在于主题和定制。如果您正在使用带有默认主题的VuePress 1，那么迁移到VitePress应该相对简单。</p><p>相比于VuePress 1，VuePress 2 被投入了更多的精力，使它能支持Vue 3 和vite。但同时维护两个SSG框架是不可能的，因此Vue开发团队决定将VitePress作为主要推荐的SSG框架，并长期维护下去。</p>',15),o=[i];function p(n,l,u,d,h,g){return r(),t("div",null,o)}const c=e(s,[["render",p]]);export{f as __pageData,c as default};
