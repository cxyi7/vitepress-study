import{_ as s,o as a,c as n,N as l}from"./chunks/framework.212bf628.js";const d=JSON.parse('{"title":"路由","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/routing.md","lastUpdated":1679206371000}'),p={name:"guide/routing.md"},o=l(`<h1 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h1><h2 id="基于文件的路由" tabindex="-1">基于文件的路由 <a class="header-anchor" href="#基于文件的路由" aria-label="Permalink to &quot;基于文件的路由&quot;">​</a></h2><p>VitePress使用基于文件的路由，这意味着生成的HTML页面是从源Markdown文件的目录结构映射的。比如，给定以下目录结构：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ guide</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ getting-started.md</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ prologue.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>那么将会生成以下HTML页面:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">index.md                  --&gt;  /index.html (accessible as /)</span></span>
<span class="line"><span style="color:#A6ACCD;">prologue.md               --&gt;  /prologue.html</span></span>
<span class="line"><span style="color:#A6ACCD;">guide/index.md            --&gt;  /guide/index.html (accessible as /guide/)</span></span>
<span class="line"><span style="color:#A6ACCD;">guide/getting-started.md  --&gt;  /guide/getting-started.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这个生成的HTML可以存放在任何能提供静态文件服务的web服务器上。</p><h2 id="根目录和源目录" tabindex="-1">根目录和源目录 <a class="header-anchor" href="#根目录和源目录" aria-label="Permalink to &quot;根目录和源目录&quot;">​</a></h2><p>在VitePress项目的文件结构中有两个很重要的概念：<strong>项目根目录</strong> 和 <strong>源目录</strong>。</p><h3 id="项目根目录" tabindex="-1">项目根目录 <a class="header-anchor" href="#项目根目录" aria-label="Permalink to &quot;项目根目录&quot;">​</a></h3><p>根目录是VitePress尝试寻找<code>.vitepress</code>重要目录的地方。这个<code>.vitepress</code>目录中保存着VitePress的配置文件、开发服务器缓存、构建输出配置和可选的主题定制代码。</p><p>当你在命令行中运行<code>vitepress dev</code>或者<code>vitepress build</code>, VitePress将会把当前的工作目录当成为项目根目录。为了指定一个子目录为根目录，你需要在命令行中输入相对路径。比如，你的VitePress项目是在<code>./docs</code>下，那么你应该运行<code>vitepress dev docs</code>这个命令。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ docs                    # project root</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ .vitepress           # config dir</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ getting-started.md</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ ...</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">vitepress</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs</span></span>
<span class="line"></span></code></pre></div><p>下面这是源文件--&gt;HTML映射的结果：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docs/index.md            --&gt;  /index.html (accessible as /)</span></span>
<span class="line"><span style="color:#A6ACCD;">docs/getting-started.md  --&gt;  /getting-started.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="源目录" tabindex="-1">源目录 <a class="header-anchor" href="#源目录" aria-label="Permalink to &quot;源目录&quot;">​</a></h3><p>源目录就是指你的Markdown源文件所在地方。默认情况下，它是与根目录相似的。但是，你可以通过<a href="/vitepress-study/reference/site-config#srcdir"><code>srcDir</code></a>配置选项去配置。</p><p><code>srcDir</code>选项是相对于根目录定位去配置的。比如，设置了<code>srcDir: &#39;src&#39;</code>，那你的文件结构就会像下面这样：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.                          # project root</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ .vitepress              # config dir</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ src                     # source dir</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ getting-started.md</span></span>
<span class="line"><span style="color:#A6ACCD;">   └─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>那个源文件 --&gt; HTML映射的结果如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">src/index.md            --&gt;  /index.html (accessible as /)</span></span>
<span class="line"><span style="color:#A6ACCD;">src/getting-started.md  --&gt;  /getting-started.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="页面间的链接" tabindex="-1">页面间的链接 <a class="header-anchor" href="#页面间的链接" aria-label="Permalink to &quot;页面间的链接&quot;">​</a></h2><p>在页面间进行链接时，你可以使用相对或绝对路径。但不推荐写文件拓展名<code>.md</code> 和 <code>.html</code>（写了也没影响）。最好的实践是不写文件拓展名，让VitePress根据你的配置去自动生成最终的URL。</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- Do --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Getting Started</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">/guide/getting-started</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Getting Started</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">../guide/getting-started</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- Don&#39;t --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Getting Started</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">/guide/getting-started.md</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Getting Started</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">/guide/getting-started.html</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>可以在<a href="./asset-handling">资源处理</a>学习更多关于资源如图片等链接方法.</p><h2 id="生成简洁url" tabindex="-1">生成简洁URL <a class="header-anchor" href="#生成简洁url" aria-label="Permalink to &quot;生成简洁URL&quot;">​</a></h2><p>默认情况下，VitePress的网站链接以<code>.html</code>结尾。但是，一些用户更倾向于简洁链接即没有<code>.html</code>拓展名。比如，使用 <code>example.com/path</code>而不是<code>example.com/path.html</code>。</p><p>另一种能达到简洁URL的方法是在目录中你的文件只使用<code>index.md</code>，像下面这种：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ getting-started</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ installation</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ index.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>一些服务或者托管平台（比如Netlify或Vercel）就能提供将<code>/foo</code> 映射到<code>/foo.html</code>的服务，前提是这个链接是有效的。如果这个功能对你来说是有用的，你可以使用<a href="/vitepress-study/reference/site-config#cleanurls"><code>cleanUrls</code></a>配置选项去配置，使生成的入站链接没有<code>.html</code>拓展名。当这个选项是开启时，VitePress的浏览器端路由当访问以<code>.html</code>结尾的链接时，将会重定向到这个简洁链接。</p><h2 id="路由重写" tabindex="-1">路由重写 <a class="header-anchor" href="#路由重写" aria-label="Permalink to &quot;路由重写&quot;">​</a></h2><p>你能自定义源文件目录和生成的页面之间的映射关系。当你有一个复杂的项目目录时，就会很有用处。比如，当你的仓库中含有多个模块时，并且像这样将文档和源文件放在一起：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├─ packages</span></span>
<span class="line"><span style="color:#A6ACCD;">│  ├─ pkg-a</span></span>
<span class="line"><span style="color:#A6ACCD;">│  │  └─ src</span></span>
<span class="line"><span style="color:#A6ACCD;">│  │      ├─ pkg-a-code.ts</span></span>
<span class="line"><span style="color:#A6ACCD;">│  │      └─ pkg-a-docs.md</span></span>
<span class="line"><span style="color:#A6ACCD;">│  └─ pkg-b</span></span>
<span class="line"><span style="color:#A6ACCD;">│     └─ src</span></span>
<span class="line"><span style="color:#A6ACCD;">│         ├─ pkg-b-code.ts</span></span>
<span class="line"><span style="color:#A6ACCD;">│         └─ pkg-b-docs.md</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>然后你希望生成像下面这样结构的VitePress页面：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">packages/pkg-a/src/pkg-a-docs.md  --&gt;  /pkg-a/index.html</span></span>
<span class="line"><span style="color:#A6ACCD;">packages/pkg-b/src/pkg-b-docs.md  --&gt;  /pkg-b/index.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>你可以通过配置<a href="/vitepress-study/reference/site-config#rewrites"><code>rewrites</code></a>选项来达到该目的：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// .vitepress/config.js</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rewrites</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">packages/pkg-a/src/pkg-a-docs.md</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pkg-a/index.md</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">packages/pkg-b/src/pkg-b-docs.md</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">pkg-b/index.md</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这个<code>rewrites</code>选项也支持动态路由参数。在上面这个例子中，你有多少个模块则配置多少个路径。但其实它们都有一个相同的文件结构，你可以像下面这样简单的进行配置：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">rewrites</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">packages/:pkg/src/(.*)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">:pkg/index.md</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这个重写路由是通过<code>path-to-regexp</code>包进行编译的，更多高级语法见<a href="https://github.com/pillarjs/path-to-regexp#parameters" target="_blank" rel="noreferrer">它的文档</a>。</p><div class="warning custom-block"><p class="custom-block-title">重写相对链接</p><p>当重写选项是开启状态，<strong>相对链接应该基于重写的路径</strong>。比如，从<code>packages/pkg-a/src/pkg-a-code.md</code>通过相对链接到<code>packages/pkg-b/src/pkg-b-code.md</code>，你应该这样写:</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">Link to PKG B</span><span style="color:#89DDFF;">](</span><span style="color:#F07178;text-decoration:underline;">../pkg-b/pkg-b-code</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div></div><h2 id="动态路由" tabindex="-1">动态路由 <a class="header-anchor" href="#动态路由" aria-label="Permalink to &quot;动态路由&quot;">​</a></h2><p>你可以通过单个Markdown文件和动态内容来生成多个页面。比如，你可以创建一个<code>packages/[pkg].md</code>文件来为项目中的每个包生成相应的页面。此时，这个<code>[pkg]</code>部分就是一个路由参数，用于区分各个页面。</p><h3 id="路径加载文件" tabindex="-1">路径加载文件 <a class="header-anchor" href="#路径加载文件" aria-label="Permalink to &quot;路径加载文件&quot;">​</a></h3><p>由于VitePress是一个静态站点生成器，正常的页面路径都是在构建时才确定。因此，一个动态路由页面<strong>必须</strong>由<strong>路径加载文件</strong>。对于 <code>packages/[pkg].md</code>，我们就需要一个<code>packages/[pkg].paths.js</code>(<code>.ts</code> 也是支持的)：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ packages</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ [pkg].md         # route template</span></span>
<span class="line"><span style="color:#A6ACCD;">   └─ [pkg].paths.js   # route paths loader</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这个路径加载程序必须提供一个带有<code>paths</code>方法的对象，并将其默认导出。这个<code>paths</code>方法返回一个数组，该数组由带有<code>params</code>属性的对象组成。每个对象都将生成一个对应的页面。</p><p><code>paths</code>数组如下所示：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// packages/[pkg].paths.js</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> params</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> pkg</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}},</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> params</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> pkg</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#F07178;">    ]</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>对应生成的HTML如下:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ packages</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ foo.html</span></span>
<span class="line"><span style="color:#A6ACCD;">   └─ bar.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="多个参数" tabindex="-1">多个参数 <a class="header-anchor" href="#多个参数" aria-label="Permalink to &quot;多个参数&quot;">​</a></h3><p>一个动态路由能包含多个参数：</p><p><strong>文件结构</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ packages</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ [pkg]-[version].md</span></span>
<span class="line"><span style="color:#A6ACCD;">   └─ [pkg]-[version].paths.js</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>路径加载程序</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">paths</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">params</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">pkg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">params</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">pkg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2.0.0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">params</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">pkg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">params</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">pkg</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2.0.0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>输出</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">└─ packages</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ foo-1.0.0.html</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ foo-2.0.0.html</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├─ bar-1.0.0.html</span></span>
<span class="line"><span style="color:#A6ACCD;">   └─ bar-2.0.0.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="动态生成路径" tabindex="-1">动态生成路径 <a class="header-anchor" href="#动态生成路径" aria-label="Permalink to &quot;动态生成路径&quot;">​</a></h3><p>这个路径加载程序模块是运行在Node.js中，并且只有在构建时才会执行。你能使用本地或远程的任何数据去动态生成路径数组。</p><p>从本地文件中生成路径:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> fs </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">fs</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fs</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">readdirSync</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">packages</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pkg</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> params</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pkg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>从远程数据中生成路径:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pkgs</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://my-api.com/packages</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pkgs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pkg</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        params</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          pkg</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pkg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          version</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pkg</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">version</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="访问页面中参数" tabindex="-1">访问页面中参数 <a class="header-anchor" href="#访问页面中参数" aria-label="Permalink to &quot;访问页面中参数&quot;">​</a></h3><p>你可以通过参数向每个页面添加额外的数据。这个Markdown路由文件能在Vue表达式中通过<code>$params</code>全局属性来访问当前页面的参数:</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> package name: {{ $params.pkg }}</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> version: {{ $params.version }}</span></span>
<span class="line"></span></code></pre></div><p>你也能通过<a href="/vitepress-study/reference/runtime-api#usedata">useData</a>运行时API来访问当前页面的参数。这个方法在Vue组件和Markdown文件中都是可行的:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vitepress</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// params is a Vue ref</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> params </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useData</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(params</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="渲染其他内容" tabindex="-1">渲染其他内容 <a class="header-anchor" href="#渲染其他内容" aria-label="Permalink to &quot;渲染其他内容&quot;">​</a></h3><p>传递给页面的参数将在客户端JavaScript有效负载中序列化，因此你应该避免传入过多的内容在参数中，比如初始Markdown或从远程CMS获取的HTML内容。</p><p>相反的，你可以在任何路径对象中使用<code>content</code>属性来传递内容到任何页面中：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">paths</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">async</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">paths</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">posts</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://my-cms.com/blog-posts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#F07178;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">posts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">post</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          params</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> id</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">post</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">          content</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">post</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">content</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// raw Markdown or HTML</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>然后，使用以下特殊的语法去渲染成为Markdown文件自身的一部分：</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- @content --&gt;</span></span>
<span class="line"></span></code></pre></div>`,77),e=[o];function t(c,r,y,D,i,F){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{d as __pageData,A as default};
